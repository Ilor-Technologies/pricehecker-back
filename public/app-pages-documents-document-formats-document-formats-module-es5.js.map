{"version":3,"sources":["webpack:///./src/app/pages/documents/document-formats/add-document-format/add-document-format.component.html","webpack:///./src/app/pages/documents/document-formats/document-formats.component.html","webpack:///./src/app/pages/documents/document-formats/edit-document-format/edit-document-format.component.html","webpack:///./src/app/pages/documents/document-formats/view-document-format/view-document-format.component.html","webpack:///./src/app/pages/documents/document-formats/add-document-format/add-document-format.component.scss","webpack:///./src/app/pages/documents/document-formats/add-document-format/add-document-format.component.ts","webpack:///./src/app/pages/documents/document-formats/document-formats.component.scss","webpack:///./src/app/pages/documents/document-formats/document-formats.component.ts","webpack:///./src/app/pages/documents/document-formats/document-formats.module.ts","webpack:///./src/app/pages/documents/document-formats/edit-document-format/edit-document-format.component.scss","webpack:///./src/app/pages/documents/document-formats/edit-document-format/edit-document-format.component.ts","webpack:///./src/app/pages/documents/document-formats/view-document-format/view-document-format.component.scss","webpack:///./src/app/pages/documents/document-formats/view-document-format/view-document-format.component.ts"],"names":[],"mappings":"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","file":"app-pages-documents-document-formats-document-formats-module-es5.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6  offset-lg-3 form-holder\\\">\\r\\n        <div class=\\\"card box-shadow border-0\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n                <h3>Add New Document Format\\r\\n                    <button routerLink=\\\"/app/document-formats\\\" class=\\\"btn btn-success pull-right\\\"><i\\r\\n                            class=\\\"fa fa-caret-left\\\"></i> Document Formats\\r\\n                    </button>\\r\\n                </h3>\\r\\n                <hr>\\r\\n                <form class=\\\"form\\\" [formGroup]=\\\"NewFormatForm\\\" (ngSubmit)=\\\"onSubmit(NewFormatForm)\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Extension<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input formControlName=\\\"extension\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!NewFormatForm.controls['extension'].valid && NewFormatForm.controls['extension'].touched\\\">\\r\\n                                    Extension is\\r\\n                                    required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Description<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input formControlName=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!NewFormatForm.controls['description'].valid && NewFormatForm.controls['description'].touched\\\">\\r\\n                                    Description is\\r\\n                                    required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Mime Type<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input formControlName=\\\"mime_type\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!NewFormatForm.controls['mime_type'].valid && NewFormatForm.controls['mime_type'].touched\\\">\\r\\n                                    Mime Type is\\r\\n                                    required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Allowed <sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <select class=\\\"form-control\\\" formControlName=\\\"allowed\\\">\\r\\n                                    <option value=\\\"1\\\" selected>Allowed</option>\\r\\n                                    <option value=\\\"0\\\">Not Allowed</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <button [disabled]=\\\"!NewFormatForm.valid || loading\\\"\\r\\n                            class=\\\"btn btn-success pull-right submit-btn mb-3 mt-3\\\">\\r\\n                        <app-small-loader *ngIf=\\\"loading\\\"></app-small-loader>{{loading ? '' : 'Add Document Format'}}\\r\\n                    </button>\\r\\n                </form>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-10 offset-md-1\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"input-group box-shadow\\\">\\r\\n                    <button *ngIf=\\\"!isVendor\\\" [disabled]=\\\"loading\\\" class=\\\"btn btn-success mr-2\\\" routerLink=\\\"/app/document-formats/create\\\">\\r\\n                        <i class=\\\"fa fa-plus\\\"></i> Create Document Format </button>\\r\\n                    <div class=\\\"input-group-addon border-top-0 border-left-0 border-bottom-0 rounded-0 search-icon\\\"><i\\r\\n                            class=\\\"fa fa-search\\\"></i></div>\\r\\n                    <input #filterField type=\\\"text\\\"\\r\\n                           placeholder=\\\"Search Document Formats\\\"\\r\\n                           class=\\\"form-control border-0\\\">\\r\\n                    <button [disabled]=\\\"loading\\\" class=\\\"btn btn-success\\\" (click)=\\\"getDocFormats(filterField.value)\\\">\\r\\n                        Search </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n    <div>\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n            <div class=\\\"col-12\\\">\\r\\n\\r\\n\\r\\n                <div class=\\\"table-responsive bg-white box-shadow\\\">\\r\\n                    <table class=\\\"table table-hover\\\">\\r\\n                        <thead>\\r\\n                        <tr>\\r\\n                             <th><input type=\\\"checkbox\\\"  [checked]=\\\"isAllChecked\\\" (change)=\\\"checkAll($event)\\\"/></th>\\r\\n                            <!--<th>Allow</th>-->\\r\\n                            <th>Extension</th>\\r\\n                            <th>Description</th>\\r\\n                            <th>Allowed</th>\\r\\n                            <th>Created At</th>\\r\\n                            <th>Updated At</th>\\r\\n\\r\\n                            <th>\\r\\n                                <!--<button (click)=\\\"allowSelection()\\\" [disabled]=\\\"loading\\\" *ngIf=\\\"!isVendor && hasSomeChecked\\\"-->\\r\\n                                        <!--class=\\\"btn btn-success btn-sm\\\"><i class=\\\"fa fa-check\\\"></i>&nbsp;Allow for selection-->\\r\\n                                <!--</button>-->\\r\\n                            </th>\\r\\n                        </tr>\\r\\n                        </thead>\\r\\n                        <tr *ngIf=\\\"fetching\\\">\\r\\n                            <td class=\\\"text-center\\\" colspan=\\\"10\\\">\\r\\n                                <app-item-loader></app-item-loader>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr *ngFor=\\\"let docFormat of doc_formats\\\">\\r\\n\\r\\n                            <td class=\\\"align-middle text-truncate\\\">\\r\\n                                <input type=\\\"checkbox\\\" [checked]=\\\"docFormat.selected\\\">\\r\\n                            </td>\\r\\n\\r\\n                            <td>{{docFormat.extension}}</td>\\r\\n                            <td>{{docFormat.description}}</td>\\r\\n                            <td class=\\\"align-middle text-truncate\\\">\\r\\n                                <span *ngIf=\\\"!docFormat.allowed\\\"\\r\\n                                      class=\\\"badge badge-danger\\\">\\r\\n                                    <i class=\\\"fa fa-times\\\"></i> not allowed</span>\\r\\n                                <span *ngIf=\\\"docFormat.allowed\\\" class=\\\"badge badge-success\\\"><i\\r\\n                                    class=\\\"fa fa-check-circle\\\"></i> allowed</span></td>\\r\\n                            <td>{{docFormat.created_at}}</td>\\r\\n                            <td>{{docFormat.updated_at}}</td>\\r\\n                            <td class=\\\"align-middle\\\">\\r\\n                                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n\\r\\n                                    <button [disabled]=\\\"loading\\\" routerLink=\\\"/app/document-formats/edit/{{docFormat.id}}\\\"\\r\\n                                       class=\\\"btn btn-secondary btn-sm\\\"><i\\r\\n                                            class=\\\"fa fa-tasks\\\"></i>&nbsp;Edit</button>\\r\\n                                    <button [disabled]=\\\"loading\\\" routerLink=\\\"/app/document-formats/view/{{docFormat.id}}\\\"\\r\\n                                       class=\\\"btn btn-success btn-sm\\\"><i\\r\\n                                            class=\\\"fa fa-eye\\\"></i>&nbsp;View</button>\\r\\n                                    &nbsp;&nbsp;&nbsp;\\r\\n                                    <button (click)=\\\"deleteDocFormat(docFormat.id)\\\" [disabled]=\\\"loading\\\"\\r\\n                                       class=\\\"btn btn-danger btn-sm text-center\\\"> <i class=\\\"fa fa-trash\\\"></i>&nbsp;Delete</button>\\r\\n                                </div>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </table>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<app-loader *ngIf=\\\"pageLoading == true\\\"></app-loader>\\r\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"!pageLoading\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12\\\">\\r\\n            <a class=\\\"btn btn-success offset-lg-10\\\" routerLink=\\\"/app/document-formats\\\"> <i\\r\\n                    class=\\\"fa fa-chevron-left \\\"></i> Document Formats </a>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mt-3\\\" *ngIf=\\\"pageLoading == false\\\">\\r\\n    <div class=\\\"col-lg-4 profile-info box-shadow offset-lg-1\\\">\\r\\n        <h3>DOCUMENT FORMAT INFORMATION</h3>\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n                <div class=\\\"\\\">\\r\\n                    <div class=\\\"media-body ml-12\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <h6 class=\\\"col-4 text-black pr-0\\\">Extension:</h6>\\r\\n                            <h6 class=\\\"col-8 pl-2\\\">{{doc_format.extension}} </h6>\\r\\n                            <h6 class=\\\"col-4 text-black pr-0\\\">Description:</h6>\\r\\n                            <h6 class=\\\"col-8 pl-2\\\">{{doc_format.description}}</h6>\\r\\n                            <h6 class=\\\"col-4 text-black pr-0\\\">Mime Type:</h6>\\r\\n                            <h6 class=\\\"col-8 pl-2\\\">{{doc_format.mime_type}}</h6>\\r\\n\\r\\n                            <div class=\\\"col-md-10 offset-md-1 action-box mt-3\\\">\\r\\n                                <button class=\\\"btn btn btn-danger\\\" (click)=\\\"onDelete($event)\\\">Delete Document Format\\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6 box-shadow form-holder\\\">\\r\\n        <div class=\\\"card border-0\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n                <h3>{{doc_format.extension}}</h3>\\r\\n                <hr>\\r\\n                <form class=\\\"form\\\" [formGroup]=\\\"FormatForm\\\" (ngSubmit)=\\\"onSubmit(FormatForm)\\\" novalidate>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Extension<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input type=\\\"text\\\" value=\\\"{{doc_format.extension}}\\\" class=\\\"form-control\\\"\\r\\n                                       formControlName=\\\"extension\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!FormatForm.controls['extension'].valid && FormatForm.controls['extension'].touched\\\">\\r\\n                                    The Extension is Required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Description<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input type=\\\"text\\\" value=\\\"{{doc_format.description}}\\\" class=\\\"form-control\\\"\\r\\n                                       formControlName=\\\"extension\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!FormatForm.controls['description'].valid && FormatForm.controls['description'].touched\\\">\\r\\n                                    The Description is Required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label>Mime Type<sup class=\\\"asterisk\\\">*</sup></label>\\r\\n                                <input type=\\\"text\\\" value=\\\"{{doc_format.mime_type}}\\\" class=\\\"form-control\\\"\\r\\n                                       formControlName=\\\"mime_type\\\">\\r\\n                                <div class=\\\"custom-alert\\\"\\r\\n                                     *ngIf=\\\"!FormatForm.controls['mime_type'].valid && FormatForm.controls['mime_type'].touched\\\">\\r\\n                                    The Mime Type is Required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-block submit-btn my-3\\\">\\r\\n                        <app-small-loader *ngIf=\\\"loading\\\"></app-small-loader>{{loading ? '' : 'Update Document Format'}}\\r\\n                    </button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6  offset-lg-3 form-holder\\\">\\r\\n        <div class=\\\"card box-shadow border-0\\\">\\r\\n            <div class=\\\"card-block pt-3\\\">\\r\\n                <h3> {{doc_format.extension}}\\r\\n                    <button routerLink=\\\"/app/document-formats\\\" class=\\\"btn btn-success pull-right\\\"><i\\r\\n                            class=\\\"fa fa-caret-left\\\"></i> Document Formats\\r\\n                    </button>\\r\\n                </h3>\\r\\n                <hr>\\r\\n\\r\\n\\r\\n                <p class=\\\"text-left text-dark\\\">Extension: &nbsp;{{doc_format.extension}}</p>\\r\\n\\r\\n                <p class=\\\"text-left text-dark\\\">Mime Type: &nbsp;{{doc_format.mime_type}}</p>\\r\\n                <p class=\\\"text-left text-dark\\\">Description: &nbsp;{{doc_format.description}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RvY3VtZW50cy9kb2N1bWVudC1mb3JtYXRzL2FkZC1kb2N1bWVudC1mb3JtYXQvYWRkLWRvY3VtZW50LWZvcm1hdC5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DocumentFormatService} from '../../../../services/document-formats.service';\r\nimport {DocumentsFormat} from '../../../../interfaces/interfaces';\r\nimport {Constants} from '../../../../app.constants';\r\n\r\n@Component({\r\n    selector: 'app-add-document-format',\r\n    templateUrl: './add-document-format.component.html',\r\n    styleUrls: ['./add-document-format.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AddDocumentFormatComponent implements OnInit {\r\n    public NewFormatForm: FormGroup;\r\n    errorMessage: any[];\r\n    loading: boolean;\r\n\r\n    constructor(private formBuilder: FormBuilder,\r\n                private router: Router,\r\n                private route: ActivatedRoute,\r\n                private documentFormatService: DocumentFormatService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n    }\r\n\r\n    buildForm() {\r\n        this.NewFormatForm = this.formBuilder.group({\r\n            extension: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            mime_type: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            description: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            allowed: [0],\r\n        });\r\n    }\r\n\r\n    onSubmit({value, valid}: { value: DocumentsFormat, valid: boolean }) {\r\n        if (value) {\r\n            this.loading = true;\r\n            this.documentFormatService.addDocFormat(value).subscribe((document_format: DocumentsFormat) => {\r\n                    if (document_format) {\r\n                        this.router.navigate(['/app/document-formats'])\r\n                    }\r\n                    this.loading = false;\r\n                }, (err) => {\r\n                    Constants.handleError(err, this.router, true);\r\n                    this.loading = false;\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RvY3VtZW50cy9kb2N1bWVudC1mb3JtYXRzL2RvY3VtZW50LWZvcm1hdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Location} from '@angular/common';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {DocumentsFormat} from '../../../interfaces/interfaces';\r\nimport {DocumentFormatService} from '../../../services/document-formats.service';\r\nimport {Constants} from '../../../app.constants';\r\nimport Swal from 'sweetalert2';\r\nimport {AppData} from '../../../data';\r\n\r\n@Component({\r\n    selector: 'app-document-formats',\r\n    templateUrl: './document-formats.component.html',\r\n    styleUrls: ['./document-formats.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DocumentFormatsComponent implements OnInit {\r\n    public doc_formats: DocumentsFormat[] = [];\r\n    public allowdoc_formats: DocumentsFormat[] = [];\r\n    toggle = false;\r\n    loading = true;\r\n    fetching = true;\r\n    errorMessage: any;\r\n    public NewAllowForm: FormGroup;\r\n\r\n    constructor(public documentFormatService: DocumentFormatService,\r\n                private route: ActivatedRoute, private _Location: Location,\r\n                private router: Router,\r\n                private formBuilder: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getDocFormats();\r\n        this.AllowFormatSelected();\r\n        this.getAllowedDocFormats();\r\n    }\r\n\r\n    get isVendor() {\r\n        return (Constants.getAuthenticatedUser() || {}).r === AppData.roles.vendor;\r\n    }\r\n\r\n    public getDocFormats(filter = ''): void {\r\n        this.fetching = true;\r\n        this.doc_formats = [];\r\n        this.documentFormatService.getDocumentFormats(filter).subscribe((doc_formats: DocumentsFormat[]) => {\r\n                this.doc_formats = doc_formats;\r\n                this.fetching = false;\r\n            }, (err) => {\r\n                this.errorMessage = Constants.handleError(err, this.router);\r\n                this.fetching = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    public getAllowedDocFormats(): void {\r\n        this.loading = true;\r\n        this.documentFormatService.getAllowedDocumentFormats().subscribe((allowdoc_formats: DocumentsFormat[]) => {\r\n                this.allowdoc_formats = allowdoc_formats;\r\n                this.loading = false;\r\n            }, (err) => {\r\n                this.errorMessage = Constants.handleError(err, this.router);\r\n                this.loading = false;\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n\r\n    AllowFormatSelected() {\r\n        this.NewAllowForm = this.formBuilder.group({\r\n            allowed: this.formBuilder.array([]),\r\n        })\r\n    }\r\n\r\n    onChange(doc_format: string, isChecked: boolean) {\r\n        const allowFormArray = <FormArray>this.NewAllowForm.controls.allowed;\r\n        if (isChecked) {\r\n            allowFormArray.push(new FormControl(doc_format));\r\n        } else {\r\n            const index = allowFormArray.controls.findIndex(x => x.value === doc_format)\r\n            allowFormArray.removeAt(index);\r\n        }\r\n    }\r\n\r\n    allowSelection() {\r\n        // const selected = this.doc_formats.filter(e => e.selected);\r\n        // this.loading = true;\r\n        // this.documentFormatService.allowDocFormat(selected).subscribe((doc_formats: DocumentsFormat) => {\r\n        //         if (doc_formats) {\r\n        //             Constants.succeeded('Format Has Been Allowed!');\r\n        //             this.getDocFormats();\r\n        //         }\r\n        //         this.loading = false;\r\n        //     }, (err) => {\r\n        //         Constants.handleError(err, this.router, true);\r\n        //     }\r\n        // )\r\n    }\r\n\r\n    checkAll(ev) {\r\n        this.doc_formats.forEach(x => x.selected = ev.target.checked)\r\n    }\r\n\r\n    get isAllChecked() {\r\n        return this.doc_formats.every(_ => _.selected);\r\n    }\r\n\r\n    get hasSomeChecked() {\r\n        return this.doc_formats.find(e => e.selected);\r\n    }\r\n\r\n    onSubmit({value, valid}: { value: DocumentsFormat, valid: boolean }) {\r\n        if (value) {\r\n            this.loading = true;\r\n            this.documentFormatService.allowDocFormat(value).subscribe((doc_formats: DocumentsFormat) => {\r\n                    if (doc_formats) {\r\n                        Constants.succeeded('Format Has Been Allowed!');\r\n                        this.getDocFormats();\r\n                    }\r\n                    this.loading = false;\r\n                }, (err) => {\r\n                    Constants.handleError(err, this.router, true);\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    deleteDocFormat(id) {\r\n        Swal.fire({\r\n            title: 'Confirm delete',\r\n            text: 'Do you want to delete the selected record?',\r\n            type: 'question',\r\n            cancelButtonText: 'Cancel',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes Delete',\r\n            showConfirmButton: true\r\n        }).then(willDelete => {\r\n            if (willDelete.value) {\r\n                this.loading = true;\r\n                this.documentFormatService.deleteDocumentFormat(id).subscribe((status: boolean) => {\r\n                    if (status) {\r\n                        Constants.succeeded('Document Format has been deleted!');\r\n                        this.getDocFormats();\r\n                    }\r\n                    this.loading = false;\r\n                }, (err) => {\r\n                    Constants.handleError(err, this.router, true);\r\n                    this.loading = false;\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ApprovalsComponent} from '../../workflow/approvals/approvals.component';\r\nimport {ApprovalRequestComponent} from '../../workflow/approval-request/approval-request.component';\r\nimport {TaskDisplayTypesComponent} from '../../workflow/task-display-types/task-display-types.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {LoaderModule} from '../../../shared/loader/loader.module';\r\nimport {CustomErrorModule} from '../../../shared/custom-error/custom-error.module';\r\nimport {DocumentFormatsComponent} from './document-formats.component';\r\nimport {AddDocumentFormatComponent} from './add-document-format/add-document-format.component';\r\nimport {EditDocumentFormatComponent} from './edit-document-format/edit-document-format.component';\r\nimport {ViewDocumentFormatComponent} from './view-document-format/view-document-format.component';\r\n\r\nexport const routes = [\r\n    {path: '', component: DocumentFormatsComponent},\r\n    {path: 'create', component: AddDocumentFormatComponent},\r\n    {path: 'edit/:id', component: EditDocumentFormatComponent},\r\n    {path: 'view/:id', component: ViewDocumentFormatComponent},\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DocumentFormatsComponent, AddDocumentFormatComponent, EditDocumentFormatComponent, ViewDocumentFormatComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routes),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        LoaderModule,\r\n        CustomErrorModule\r\n    ]\r\n})\r\nexport class DocumentFormatsModule {\r\n}\r\n","module.exports = \".profile-info {\\n  background: #0DB28B;\\n}\\n.profile-info h3 {\\n  color: white;\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n.profile-info .card {\\n  margin-top: 20px;\\n  height: 80%;\\n}\\n.profile-info .card .media .media-body h6 {\\n  font-size: 16px;\\n}\\n.profile-info .action-box {\\n  border-radius: 3px;\\n  border: 2px dashed #ECEEEF;\\n  padding: 10px;\\n  align-items: center;\\n}\\n.profile-info .action-box button {\\n  cursor: pointer;\\n}\\n.profile-info .action-box h3 {\\n  color: #333333;\\n  text-align: left;\\n}\\n.profile-info .form-holder {\\n  background: white !important;\\n}\\n.submit-btn {\\n  padding: 15px 20px;\\n  background: #0DB28B;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.asterisk {\\n  font-size: 12px;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZG9jdW1lbnRzL2RvY3VtZW50LWZvcm1hdHMvZWRpdC1kb2N1bWVudC1mb3JtYXQvQzpcXFVzZXJzXFxIUFxcRG9jdW1lbnRzXFxQcm9qZWN0c1xcSWxvciB0ZWNobm9sb2dpZXMgbHRkXFxpbG9yLXBjLXdlYi9zcmNcXGFwcFxccGFnZXNcXGRvY3VtZW50c1xcZG9jdW1lbnQtZm9ybWF0c1xcZWRpdC1kb2N1bWVudC1mb3JtYXRcXGVkaXQtZG9jdW1lbnQtZm9ybWF0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wYWdlcy9kb2N1bWVudHMvZG9jdW1lbnQtZm9ybWF0cy9lZGl0LWRvY3VtZW50LWZvcm1hdC9lZGl0LWRvY3VtZW50LWZvcm1hdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNJLG1CQUFBO0FDQUo7QURDSTtFQUNFLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FDQ047QURDSTtFQUNFLGdCQUFBO0VBQ0EsV0FBQTtBQ0NOO0FERVE7RUFDRSxlQUFBO0FDQVY7QURLSTtFQUNFLGtCQUFBO0VBQ0EsMEJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUNITjtBREtNO0VBQ0UsZUFBQTtBQ0hSO0FETU07RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7QUNKUjtBRFFJO0VBQ0UsNEJBQUE7QUNOTjtBRFNFO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtBQ05KO0FEUUU7RUFDRSxlQUFBO0VBQ0EsVUFBQTtBQ0xKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZG9jdW1lbnRzL2RvY3VtZW50LWZvcm1hdHMvZWRpdC1kb2N1bWVudC1mb3JtYXQvZWRpdC1kb2N1bWVudC1mb3JtYXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnByb2ZpbGUtaW5mbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMERCMjhCO1xyXG4gICAgaDMge1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIH1cclxuICAgIC5jYXJkIHtcclxuICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgaGVpZ2h0OiA4MCU7XHJcbiAgXHJcbiAgICAgIC5tZWRpYSB7XHJcbiAgICAgICAgLm1lZGlhLWJvZHkgaDYge1xyXG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIFxyXG4gICAgLmFjdGlvbi1ib3h7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgYm9yZGVyOiAycHggZGFzaGVkICNFQ0VFRUY7XHJcbiAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgXHJcbiAgICAgIGJ1dHRvbntcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXJcclxuICAgICAgfVxyXG4gIFxyXG4gICAgICBoM3tcclxuICAgICAgICBjb2xvcjogIzMzMzMzMztcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuZm9ybS1ob2xkZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxuICAuc3VibWl0LWJ0bntcclxuICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgIGJhY2tncm91bmQ6ICMwREIyOEI7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIH1cclxuICAuYXN0ZXJpc2t7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gIH1cclxuICAiLCIucHJvZmlsZS1pbmZvIHtcbiAgYmFja2dyb3VuZDogIzBEQjI4Qjtcbn1cbi5wcm9maWxlLWluZm8gaDMge1xuICBjb2xvcjogd2hpdGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cbi5wcm9maWxlLWluZm8gLmNhcmQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBoZWlnaHQ6IDgwJTtcbn1cbi5wcm9maWxlLWluZm8gLmNhcmQgLm1lZGlhIC5tZWRpYS1ib2R5IGg2IHtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuLnByb2ZpbGUtaW5mbyAuYWN0aW9uLWJveCB7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAycHggZGFzaGVkICNFQ0VFRUY7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucHJvZmlsZS1pbmZvIC5hY3Rpb24tYm94IGJ1dHRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5wcm9maWxlLWluZm8gLmFjdGlvbi1ib3ggaDMge1xuICBjb2xvcjogIzMzMzMzMztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cbi5wcm9maWxlLWluZm8gLmZvcm0taG9sZGVyIHtcbiAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuLnN1Ym1pdC1idG4ge1xuICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gIGJhY2tncm91bmQ6ICMwREIyOEI7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLmFzdGVyaXNrIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBjb2xvcjogcmVkO1xufSJdfQ== */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DocumentFormatService} from '../../../../services/document-formats.service';\r\nimport {DocumentsFormat} from '../../../../interfaces/interfaces';\r\nimport {Constants} from '../../../../app.constants';\r\n\r\n@Component({\r\n    selector: 'app-edit-document-format',\r\n    templateUrl: './edit-document-format.component.html',\r\n    styleUrls: ['./edit-document-format.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class EditDocumentFormatComponent implements OnInit {\r\n    public FormatForm: FormGroup;\r\n    doc_format: DocumentsFormat = {\r\n        extension: '',\r\n        mime_type: '',\r\n        description: '',\r\n        allowed: 0,\r\n        selected: null,\r\n    };\r\n    doc_formats: DocumentsFormat[] = [];\r\n    errorMessage: any;\r\n    loading: boolean;\r\n    pageLoading: boolean;\r\n    onSuccess: any;\r\n    deleteMessageEnabled: boolean;\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private documentformatService: DocumentFormatService,\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.buildForm();\r\n        const id = this.route.snapshot.params['id'];\r\n        this.getDocumentFormat(id);\r\n    }\r\n\r\n    buildForm() {\r\n\r\n        this.FormatForm = this.formBuilder.group({\r\n            extension: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            mime_type: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            description: ['', Validators.compose([Validators.required, Validators.maxLength(255)])],\r\n            allowed: [0],\r\n        })\r\n    }\r\n\r\n    getDocumentFormat(id: number) {\r\n        this.pageLoading = true;\r\n        this.documentformatService.getDocumentFormatByID(id).subscribe((doc_format: DocumentsFormat) => {\r\n                this.doc_format = doc_format;\r\n                this.FormatForm.patchValue({\r\n                    extension: this.doc_format.extension,\r\n                    description: this.doc_format.description,\r\n                    mime_type: this.doc_format.mime_type,\r\n                    allowed: this.doc_format.allowed\r\n                });\r\n                this.pageLoading = false;\r\n            }, (err) => {\r\n                this.errorMessage = Constants.handleError(err, this.router, true);\r\n                this.pageLoading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    onSubmit({value, valid}: { value: DocumentsFormat, valid: boolean }) {\r\n        value.id = this.doc_format.id;\r\n        if (value.id) {\r\n            this.loading = true;\r\n            this.documentformatService.updateDocumentFormat(value).subscribe((doc_format: DocumentsFormat) => {\r\n                    if (this.doc_format) {\r\n                        Constants.succeeded('Document Format successfully updated');\r\n                    }\r\n                    this.loading = false;\r\n                }, (err) => {\r\n                    this.errorMessage = Constants.handleError(err, this.router, true);\r\n                    this.loading = false;\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    onDelete(event: Event) {\r\n        event.preventDefault();\r\n        this.documentformatService.deleteDocumentFormat(this.doc_format.id)\r\n            .subscribe((status: boolean) => {\r\n                    if (status) {\r\n                        this.router.navigate(['/app/document-formats']);\r\n                    } else {\r\n                        this.errorMessage = 'Unable to delete Document Format';\r\n                    }\r\n                },\r\n                (err) => {\r\n                    this.errorMessage = <any>err.Staus;\r\n                }\r\n            )\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2RvY3VtZW50cy9kb2N1bWVudC1mb3JtYXRzL3ZpZXctZG9jdW1lbnQtZm9ybWF0L3ZpZXctZG9jdW1lbnQtZm9ybWF0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit, ViewEncapsulation, Input} from '@angular/core';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\n\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Location} from '@angular/common';\r\nimport * as $ from 'jquery';\r\nimport {DocumentsFormat} from '../../../../interfaces/interfaces';\r\nimport {DocumentFormatService} from '../../../../services/document-formats.service';\r\nimport {Constants} from '../../../../app.constants';\r\nimport {AuthService} from '../../../../services/auth.service';\r\nimport {AppData} from '../../../../data';\r\n\r\n@Component({\r\n    selector: 'app-view-document-format',\r\n    templateUrl: './view-document-format.component.html',\r\n    styleUrls: ['./view-document-format.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ViewDocumentFormatComponent implements OnInit {\r\n    doc_format: DocumentsFormat = {\r\n        mime_type: '',\r\n        description: '',\r\n        extension: '',\r\n        allowed: 0\r\n    };\r\n    errorMessage: any;\r\n    loading: boolean;\r\n    pageLoading: boolean;\r\n    url: string;\r\n\r\n    constructor(private documentFormatService: DocumentFormatService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private _location: Location) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        const id = this.route.snapshot.params['id'];\r\n        // const id2 = this.good.id;\r\n        this.getDocumentFormat(id);\r\n        this.url = Constants.url;\r\n    }\r\n\r\n    get isVendor() {\r\n        return (Constants.getAuthenticatedUser() || {}).r === AppData.roles.vendor;\r\n    }\r\n\r\n    backClicked() {\r\n        this._location.back();\r\n    }\r\n\r\n    getDocumentFormat(id: number) {\r\n        this.loading = true;\r\n        this.documentFormatService.getDocumentFormatByID(id)\r\n            .subscribe((doc_format: DocumentsFormat) => {\r\n                    this.doc_format = doc_format;\r\n                    this.loading = false;\r\n                }, (err) => {\r\n                    this.errorMessage = Constants.handleError(err, this.router);\r\n                    this.loading = false;\r\n                }\r\n            );\r\n    }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}